Assignment - Storage Design
Storage Design Patterns
Let’s compare the Gas cost between 2 different designed contracts with the same functionality.

It’s your assignment to create a contract where I can store this struct.

struct Entity{
    uint data;
    address _address;
}
In one of the contracts, I want you to use only a mapping.
In the other contract, I want you to use only an array.

The contract should have 2 functions

addEntity(). Creates a new entity for msg.sender and adds it to the mapping/array.
updateEntity(). Updates the data in a saved entity for msg.sender

After you have built the 2 contracts, I want you to answer the following questions.

When executing the addEntity function, which design consumes the most gas (execution cost)? Is it a significant difference? Why/why not?
Add 5 Entities into storage using the addEntity function and 5 different addresses. Then update the data of the fifth address you used. Do this for both contracts and take note of the gas consumption (execution cost). Which solution consumes more gas and why?

