MyToken contract is a basic example of using OpenZeppelin's ERC20 derived
contract (ERC20Capped) with the OZ Ownable contract.
The _mint function is called in the constructor to set the initial supply.

Note: In current OZ library there is a compile issue in calling the
ERC20Capped's _mint function (see OpenZeppelin/openzeppelin-contracts#2580)
and so a workaround has been used (calling the base ERC20's _mint function)
but this workaround doesn't inforce the total supply cap in the constructor'
ERC20._mint() call.

This example project was developed in truffle, with a ganache-cli local bc
client.  There to compile and migrate the contract use:
    truffle compile
    truffle migrate --reset

To interact with the contact, first enter: truffle console
Example of how to interact with SC from the console:
truffle(development): let instance = await MyToken.deployed()
truffle(development): instance.balanceOf(accounts[0])
truffle(development): accounts[0]
truffle(development): instance.owner()



